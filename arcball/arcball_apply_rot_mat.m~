function arcball = arcball_apply_rot_mat(arcball)

if arcball.isrotating
	if norm(arcball.cur_rot_vec - arcball.start_rot_vec) > 1E-6
		rot_axis = cross(arcball.cur_rot_vec,arcball.start_rot_vec);
		rot_axis = rot_axis/norm(rot_axis);
		val = dot(arcball.cur_rot_vec,arcball.start_rot_vec);
		if val > 1-1E-10
			val = 1;
		end
		rot_angle = acos(val)*180.0/pi;
		arcball = arcball_apply_trans_mat(arcball,true); t1 = arcball.last_trans;
		glRotated(rot_angle*2,-rot_axis(1),-rot_axis(2),-rot_axis(3));
		arcball = arcball_apply_trans_mat(arcball,false); t2 = arcball.last_trans;
        R = ones(4); R(1:3,1:3)=getRotationMatrix(rot_angle*2,-rot_axis);
        H1 = ones(4); H1(1:3,4)=t1';
        arcball.start_matrix = 
	end
	glMultMatrixd(arcball.start_matrix);
end